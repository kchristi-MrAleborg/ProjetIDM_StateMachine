/*
 * generated by Xtext
 */
grammar InternalStateMachine;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.idm.projet.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.idm.projet.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.idm.projet.services.StateMachineGrammarAccess;

}

@parser::members {

 	private StateMachineGrammarAccess grammarAccess;
 	
    public InternalStateMachineParser(TokenStream input, StateMachineGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "StateMachine";	
   	}
   	
   	@Override
   	protected StateMachineGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleStateMachine
entryRuleStateMachine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateMachineRule()); }
	 iv_ruleStateMachine=ruleStateMachine 
	 { $current=$iv_ruleStateMachine.current; } 
	 EOF 
;

// Rule StateMachine
ruleStateMachine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStateMachineAccess().getStateMachineAction_0(),
            $current);
    }
)	otherlv_1='StateMachine' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStateMachineAccess().getStateMachineKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getStateMachineAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMachineRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getVariablesVariableParserRuleCall_4_0()); 
	    }
		lv_variables_4_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"variables",
        		lv_variables_4_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='events' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStateMachineAccess().getEventsKeyword_5());
    }
	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getEventsEventParserRuleCall_7_0()); 
	    }
		lv_events_7_0=ruleEvent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"events",
        		lv_events_7_0, 
        		"Event");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStateMachineAccess().getCommaKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getEventsEventParserRuleCall_8_1_0()); 
	    }
		lv_events_9_0=ruleEvent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"events",
        		lv_events_9_0, 
        		"Event");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getStatesOneStateParserRuleCall_10_0()); 
	    }
		lv_states_11_0=ruleoneState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"states",
        		lv_states_11_0, 
        		"oneState");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getStatesOneStateParserRuleCall_11_0()); 
	    }
		lv_states_12_0=ruleoneState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"states",
        		lv_states_12_0, 
        		"oneState");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getInitialStateInitialStateParserRuleCall_12_0()); 
	    }
		lv_initialState_13_0=ruleInitialState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		set(
       			$current, 
       			"initialState",
        		lv_initialState_13_0, 
        		"InitialState");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getTransitionsTransitionParserRuleCall_13_0()); 
	    }
		lv_transitions_14_0=ruleTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"transitions",
        		lv_transitions_14_0, 
        		"Transition");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getTransitionsTransitionParserRuleCall_14_0()); 
	    }
		lv_transitions_15_0=ruleTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"transitions",
        		lv_transitions_15_0, 
        		"Transition");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_15());
    }
)
;





// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	 iv_ruleVariable=ruleVariable 
	 { $current=$iv_ruleVariable.current; } 
	 EOF 
;

// Rule Variable
ruleVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getVariableAccess().getIntegerVariableParserRuleCall_0()); 
    }
    this_integerVariable_0=ruleintegerVariable
    { 
        $current = $this_integerVariable_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVariableAccess().getBooleanVariableParserRuleCall_1()); 
    }
    this_booleanVariable_1=rulebooleanVariable
    { 
        $current = $this_booleanVariable_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleintegerVariable
entryRuleintegerVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerVariableRule()); }
	 iv_ruleintegerVariable=ruleintegerVariable 
	 { $current=$iv_ruleintegerVariable.current; } 
	 EOF 
;

// Rule integerVariable
ruleintegerVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIntegerVariableAccess().getIntegerVariableAction_0(),
            $current);
    }
)	otherlv_1='var' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntegerVariableAccess().getVarKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getIntegerVariableAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntegerVariableAccess().getColonKeyword_3());
    }
	otherlv_4='integer' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIntegerVariableAccess().getIntegerKeyword_4());
    }
(	otherlv_5=':=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntegerVariableAccess().getColonEqualsSignKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerVariableAccess().getValueIntegerDataParserRuleCall_5_1_0()); 
	    }
		lv_value_6_0=ruleintegerData		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerVariableRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_6_0, 
        		"integerData");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRulebooleanVariable
entryRulebooleanVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanVariableRule()); }
	 iv_rulebooleanVariable=rulebooleanVariable 
	 { $current=$iv_rulebooleanVariable.current; } 
	 EOF 
;

// Rule booleanVariable
rulebooleanVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBooleanVariableAccess().getBooleanVariableAction_0(),
            $current);
    }
)	otherlv_1='var' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBooleanVariableAccess().getVarKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getBooleanVariableAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBooleanVariableAccess().getColonKeyword_3());
    }
	otherlv_4='boolean' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBooleanVariableAccess().getBooleanKeyword_4());
    }
(	otherlv_5=':=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBooleanVariableAccess().getColonEqualsSignKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanVariableAccess().getValueBooleanDataParserRuleCall_5_1_0()); 
	    }
		lv_value_6_0=rulebooleanData		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanVariableRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_6_0, 
        		"booleanData");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;







// Entry rule entryRuleintegerData
entryRuleintegerData returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerDataRule()); }
	 iv_ruleintegerData=ruleintegerData 
	 { $current=$iv_ruleintegerData.current; } 
	 EOF 
;

// Rule integerData
ruleintegerData returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIntegerDataAccess().getIntegerDataAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_INT
		{
			newLeafNode(lv_value_1_0, grammarAccess.getIntegerDataAccess().getValueINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRulebooleanData
entryRulebooleanData returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanDataRule()); }
	 iv_rulebooleanData=rulebooleanData 
	 { $current=$iv_rulebooleanData.current; } 
	 EOF 
;

// Rule booleanData
rulebooleanData returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBooleanDataAccess().getBooleanDataAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanDataAccess().getValueBoolParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleBool		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanDataRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"Bool");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBool
entryRuleBool returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoolRule()); } 
	 iv_ruleBool=ruleBool 
	 { $current=$iv_ruleBool.current.getText(); }  
	 EOF 
;

// Rule Bool
ruleBool returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBoolAccess().getTrueKeyword_0()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBoolAccess().getFalseKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleEvent
entryRuleEvent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	 iv_ruleEvent=ruleEvent 
	 { $current=$iv_ruleEvent.current; } 
	 EOF 
;

// Rule Event
ruleEvent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getEventAccess().getEventAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEventAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleoneState
entryRuleoneState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOneStateRule()); }
	 iv_ruleoneState=ruleoneState 
	 { $current=$iv_ruleoneState.current; } 
	 EOF 
;

// Rule oneState
ruleoneState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOneStateAccess().getStateParserRuleCall_0()); 
    }
    this_State_0=ruleState
    { 
        $current = $this_State_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOneStateAccess().getCompositeStateParserRuleCall_1()); 
    }
    this_CompositeState_1=ruleCompositeState
    { 
        $current = $this_CompositeState_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleState
entryRuleState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	 iv_ruleState=ruleState 
	 { $current=$iv_ruleState.current; } 
	 EOF 
;

// Rule State
ruleState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStateAccess().getStateAction_0(),
            $current);
    }
)	otherlv_1='state' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStateAccess().getStateKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateAccess().getOperationOperationParserRuleCall_4_0()); 
	    }
		lv_operation_4_0=ruleOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateRule());
	        }
       		set(
       			$current, 
       			"operation",
        		lv_operation_4_0, 
        		"Operation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleCompositeState
entryRuleCompositeState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompositeStateRule()); }
	 iv_ruleCompositeState=ruleCompositeState 
	 { $current=$iv_ruleCompositeState.current; } 
	 EOF 
;

// Rule CompositeState
ruleCompositeState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCompositeStateAccess().getCompositeStateAction_0(),
            $current);
    }
)	otherlv_1='state' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCompositeStateAccess().getStateKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getCompositeStateAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompositeStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCompositeStateAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeStateAccess().getStatesStateParserRuleCall_4_0()); 
	    }
		lv_states_4_0=ruleState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeStateRule());
	        }
       		add(
       			$current, 
       			"states",
        		lv_states_4_0, 
        		"State");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeStateAccess().getStatesStateParserRuleCall_5_0()); 
	    }
		lv_states_5_0=ruleState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeStateRule());
	        }
       		add(
       			$current, 
       			"states",
        		lv_states_5_0, 
        		"State");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeStateAccess().getInitialStateInitialStateParserRuleCall_6_0()); 
	    }
		lv_initialState_6_0=ruleInitialState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeStateRule());
	        }
       		set(
       			$current, 
       			"initialState",
        		lv_initialState_6_0, 
        		"InitialState");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCompositeStateAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleInitialState
entryRuleInitialState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInitialStateRule()); }
	 iv_ruleInitialState=ruleInitialState 
	 { $current=$iv_ruleInitialState.current; } 
	 EOF 
;

// Rule InitialState
ruleInitialState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInitialStateAccess().getInitialStateAction_0(),
            $current);
    }
)	otherlv_1='init' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInitialStateAccess().getInitKeyword_1());
    }
	otherlv_2='with' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInitialStateAccess().getWithKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInitialStateRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getInitialStateAccess().getReferencedStateStateCrossReference_3_0()); 
	}

)
))
;





// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	 iv_ruleOperation=ruleOperation 
	 { $current=$iv_ruleOperation.current; } 
	 EOF 
;

// Rule Operation
ruleOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOperationAccess().getOperationAction_0(),
            $current);
    }
)	otherlv_1='do' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOperationAccess().getDoKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getContentsAssignmentParserRuleCall_3_0()); 
	    }
		lv_contents_3_0=ruleAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		add(
       			$current, 
       			"contents",
        		lv_contents_3_0, 
        		"Assignment");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOperationAccess().getSemicolonKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getContentsAssignmentParserRuleCall_4_1_0()); 
	    }
		lv_contents_5_0=ruleAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		add(
       			$current, 
       			"contents",
        		lv_contents_5_0, 
        		"Assignment");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	 iv_ruleAssignment=ruleAssignment 
	 { $current=$iv_ruleAssignment.current; } 
	 EOF 
;

// Rule Assignment
ruleAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAssignmentAccess().getBooleanAssignmentParserRuleCall_0()); 
    }
    this_BooleanAssignment_0=ruleBooleanAssignment
    { 
        $current = $this_BooleanAssignment_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAssignmentAccess().getIntegerAssignmentParserRuleCall_1()); 
    }
    this_IntegerAssignment_1=ruleIntegerAssignment
    { 
        $current = $this_IntegerAssignment_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBooleanAssignment
entryRuleBooleanAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanAssignmentRule()); }
	 iv_ruleBooleanAssignment=ruleBooleanAssignment 
	 { $current=$iv_ruleBooleanAssignment.current; } 
	 EOF 
;

// Rule BooleanAssignment
ruleBooleanAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBooleanAssignmentAccess().getAssignmentAction_0(),
            $current);
    }
)(
(
		lv__name_1_0=RULE_STRING
		{
			newLeafNode(lv__name_1_0, grammarAccess.getBooleanAssignmentAccess().get_nameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanAssignmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"_name",
        		lv__name_1_0, 
        		"STRING");
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanAssignmentRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getBooleanAssignmentAccess().getVariableBooleanVariableCrossReference_2_0()); 
	}

)
)	otherlv_3=':=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBooleanAssignmentAccess().getColonEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanAssignmentAccess().getExpressionBooleanDataParserRuleCall_4_0()); 
	    }
		lv_expression_4_0=rulebooleanData		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanAssignmentRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_4_0, 
        		"booleanData");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIntegerAssignment
entryRuleIntegerAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerAssignmentRule()); }
	 iv_ruleIntegerAssignment=ruleIntegerAssignment 
	 { $current=$iv_ruleIntegerAssignment.current; } 
	 EOF 
;

// Rule IntegerAssignment
ruleIntegerAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIntegerAssignmentAccess().getAssignmentAction_0(),
            $current);
    }
)(
(
		lv__name_1_0=RULE_STRING
		{
			newLeafNode(lv__name_1_0, grammarAccess.getIntegerAssignmentAccess().get_nameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerAssignmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"_name",
        		lv__name_1_0, 
        		"STRING");
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerAssignmentRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getIntegerAssignmentAccess().getVariableIntegerVariableCrossReference_2_0()); 
	}

)
)	otherlv_3=':=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntegerAssignmentAccess().getColonEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerAssignmentAccess().getExpressionIntegerDataParserRuleCall_4_0()); 
	    }
		lv_expression_4_0=ruleintegerData		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerAssignmentRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_4_0, 
        		"integerData");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	 iv_ruleTransition=ruleTransition 
	 { $current=$iv_ruleTransition.current; } 
	 EOF 
;

// Rule Transition
ruleTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTransitionAccess().getTransitionAction_0(),
            $current);
    }
)	otherlv_1='from' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTransitionAccess().getFromKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getTransitionAccess().getSourceStateCrossReference_2_0()); 
	}

)
)	otherlv_3='to' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTransitionAccess().getToKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getTransitionAccess().getTargetStateCrossReference_4_0()); 
	}

)
)	otherlv_5='for' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTransitionAccess().getForKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
	otherlv_6=RULE_STRING
	{
		newLeafNode(otherlv_6, grammarAccess.getTransitionAccess().getEventEventCrossReference_6_0()); 
	}

)
))
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


