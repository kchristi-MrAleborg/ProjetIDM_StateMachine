/*
 * generated by Xtext
 */
package org.xtext.idm.projet.validation

import org.eclipse.xtext.validation.Check
import SimplStateMachine.Assignment
import SimplStateMachine.IntegerVariable
import SimplStateMachine.SimplStateMachinePackage
import SimplStateMachine.BooleanData
import SimplStateMachine.BooleanVariable
import SimplStateMachine.IntegerData

//import org.eclipse.xtext.validation.Check

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class StateMachineValidator extends AbstractStateMachineValidator {

//  public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					MyDslPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}

	@Check
	def checkType(Assignment a){
		if (IntegerVariable.isInstance((a.variable)) && !(IntegerData.isInstance((a.expression)))){
			System.err.println("Type Error")
			error("Attention au type de la variable!!!", SimplStateMachinePackage.Literals.ASSIGNMENT__EXPRESSION)
		}
		else if (BooleanVariable.isInstance((a.variable)) && !(BooleanData.isInstance((a.expression)))){
			System.err.println("Type Error")
			error("Attention au type de la variable!!!", SimplStateMachinePackage.Literals.ASSIGNMENT__EXPRESSION)
		}
	}

}
