/*
 * generated by Xtext
 */
grammar InternalStateMachine;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.idm.projet.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.idm.projet.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.idm.projet.services.StateMachineGrammarAccess;

}

@parser::members {
 
 	private StateMachineGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(StateMachineGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleStateMachine
entryRuleStateMachine 
:
{ before(grammarAccess.getStateMachineRule()); }
	 ruleStateMachine
{ after(grammarAccess.getStateMachineRule()); } 
	 EOF 
;

// Rule StateMachine
ruleStateMachine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateMachineAccess().getGroup()); }
(rule__StateMachine__Group__0)
{ after(grammarAccess.getStateMachineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getAlternatives()); }
(rule__Variable__Alternatives)
{ after(grammarAccess.getVariableAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleintegerVariable
entryRuleintegerVariable 
:
{ before(grammarAccess.getIntegerVariableRule()); }
	 ruleintegerVariable
{ after(grammarAccess.getIntegerVariableRule()); } 
	 EOF 
;

// Rule integerVariable
ruleintegerVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerVariableAccess().getGroup()); }
(rule__IntegerVariable__Group__0)
{ after(grammarAccess.getIntegerVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulebooleanVariable
entryRulebooleanVariable 
:
{ before(grammarAccess.getBooleanVariableRule()); }
	 rulebooleanVariable
{ after(grammarAccess.getBooleanVariableRule()); } 
	 EOF 
;

// Rule booleanVariable
rulebooleanVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanVariableAccess().getGroup()); }
(rule__BooleanVariable__Group__0)
{ after(grammarAccess.getBooleanVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleintegerData
entryRuleintegerData 
:
{ before(grammarAccess.getIntegerDataRule()); }
	 ruleintegerData
{ after(grammarAccess.getIntegerDataRule()); } 
	 EOF 
;

// Rule integerData
ruleintegerData
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerDataAccess().getGroup()); }
(rule__IntegerData__Group__0)
{ after(grammarAccess.getIntegerDataAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulebooleanData
entryRulebooleanData 
:
{ before(grammarAccess.getBooleanDataRule()); }
	 rulebooleanData
{ after(grammarAccess.getBooleanDataRule()); } 
	 EOF 
;

// Rule booleanData
rulebooleanData
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanDataAccess().getGroup()); }
(rule__BooleanData__Group__0)
{ after(grammarAccess.getBooleanDataAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBool
entryRuleBool 
:
{ before(grammarAccess.getBoolRule()); }
	 ruleBool
{ after(grammarAccess.getBoolRule()); } 
	 EOF 
;

// Rule Bool
ruleBool
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoolAccess().getAlternatives()); }
(rule__Bool__Alternatives)
{ after(grammarAccess.getBoolAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEvent
entryRuleEvent 
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventAccess().getGroup()); }
(rule__Event__Group__0)
{ after(grammarAccess.getEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleoneState
entryRuleoneState 
:
{ before(grammarAccess.getOneStateRule()); }
	 ruleoneState
{ after(grammarAccess.getOneStateRule()); } 
	 EOF 
;

// Rule oneState
ruleoneState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOneStateAccess().getAlternatives()); }
(rule__OneState__Alternatives)
{ after(grammarAccess.getOneStateAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getGroup()); }
(rule__State__Group__0)
{ after(grammarAccess.getStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompositeState
entryRuleCompositeState 
:
{ before(grammarAccess.getCompositeStateRule()); }
	 ruleCompositeState
{ after(grammarAccess.getCompositeStateRule()); } 
	 EOF 
;

// Rule CompositeState
ruleCompositeState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompositeStateAccess().getGroup()); }
(rule__CompositeState__Group__0)
{ after(grammarAccess.getCompositeStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitialState
entryRuleInitialState 
:
{ before(grammarAccess.getInitialStateRule()); }
	 ruleInitialState
{ after(grammarAccess.getInitialStateRule()); } 
	 EOF 
;

// Rule InitialState
ruleInitialState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitialStateAccess().getGroup()); }
(rule__InitialState__Group__0)
{ after(grammarAccess.getInitialStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperation
entryRuleOperation 
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationAccess().getGroup()); }
(rule__Operation__Group__0)
{ after(grammarAccess.getOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getAlternatives()); }
(rule__Assignment__Alternatives)
{ after(grammarAccess.getAssignmentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanAssignment
entryRuleBooleanAssignment 
:
{ before(grammarAccess.getBooleanAssignmentRule()); }
	 ruleBooleanAssignment
{ after(grammarAccess.getBooleanAssignmentRule()); } 
	 EOF 
;

// Rule BooleanAssignment
ruleBooleanAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanAssignmentAccess().getGroup()); }
(rule__BooleanAssignment__Group__0)
{ after(grammarAccess.getBooleanAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerAssignment
entryRuleIntegerAssignment 
:
{ before(grammarAccess.getIntegerAssignmentRule()); }
	 ruleIntegerAssignment
{ after(grammarAccess.getIntegerAssignmentRule()); } 
	 EOF 
;

// Rule IntegerAssignment
ruleIntegerAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerAssignmentAccess().getGroup()); }
(rule__IntegerAssignment__Group__0)
{ after(grammarAccess.getIntegerAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Variable__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getIntegerVariableParserRuleCall_0()); }
	ruleintegerVariable
{ after(grammarAccess.getVariableAccess().getIntegerVariableParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getBooleanVariableParserRuleCall_1()); }
	rulebooleanVariable
{ after(grammarAccess.getVariableAccess().getBooleanVariableParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Bool__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getBoolAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getBoolAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getBoolAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneState__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneStateAccess().getStateParserRuleCall_0()); }
	ruleState
{ after(grammarAccess.getOneStateAccess().getStateParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOneStateAccess().getCompositeStateParserRuleCall_1()); }
	ruleCompositeState
{ after(grammarAccess.getOneStateAccess().getCompositeStateParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getBooleanAssignmentParserRuleCall_0()); }
	ruleBooleanAssignment
{ after(grammarAccess.getAssignmentAccess().getBooleanAssignmentParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAssignmentAccess().getIntegerAssignmentParserRuleCall_1()); }
	ruleIntegerAssignment
{ after(grammarAccess.getAssignmentAccess().getIntegerAssignmentParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__StateMachine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__0__Impl
	rule__StateMachine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStateMachineAction_0()); }
(

)
{ after(grammarAccess.getStateMachineAccess().getStateMachineAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__1__Impl
	rule__StateMachine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStateMachineKeyword_1()); }

	'StateMachine' 

{ after(grammarAccess.getStateMachineAccess().getStateMachineKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__2__Impl
	rule__StateMachine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getNameAssignment_2()); }
(rule__StateMachine__NameAssignment_2)
{ after(grammarAccess.getStateMachineAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__3__Impl
	rule__StateMachine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__4__Impl
	rule__StateMachine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getVariablesAssignment_4()); }
(rule__StateMachine__VariablesAssignment_4)*
{ after(grammarAccess.getStateMachineAccess().getVariablesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__5__Impl
	rule__StateMachine__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getEventsKeyword_5()); }

	'events' 

{ after(grammarAccess.getStateMachineAccess().getEventsKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__6__Impl
	rule__StateMachine__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__7__Impl
	rule__StateMachine__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getEventsAssignment_7()); }
(rule__StateMachine__EventsAssignment_7)
{ after(grammarAccess.getStateMachineAccess().getEventsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__8__Impl
	rule__StateMachine__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGroup_8()); }
(rule__StateMachine__Group_8__0)*
{ after(grammarAccess.getStateMachineAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__9__Impl
	rule__StateMachine__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__10__Impl
	rule__StateMachine__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStatesAssignment_10()); }
(rule__StateMachine__StatesAssignment_10)
{ after(grammarAccess.getStateMachineAccess().getStatesAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__11__Impl
	rule__StateMachine__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStatesAssignment_11()); }
(rule__StateMachine__StatesAssignment_11)*
{ after(grammarAccess.getStateMachineAccess().getStatesAssignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__12__Impl
	rule__StateMachine__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getInitialStateAssignment_12()); }
(rule__StateMachine__InitialStateAssignment_12)
{ after(grammarAccess.getStateMachineAccess().getInitialStateAssignment_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__13__Impl
	rule__StateMachine__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getTransitionsAssignment_13()); }
(rule__StateMachine__TransitionsAssignment_13)
{ after(grammarAccess.getStateMachineAccess().getTransitionsAssignment_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__14__Impl
	rule__StateMachine__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getTransitionsAssignment_14()); }
(rule__StateMachine__TransitionsAssignment_14)*
{ after(grammarAccess.getStateMachineAccess().getTransitionsAssignment_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__15__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_15()); }

	'}' 

{ after(grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


































rule__StateMachine__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_8__0__Impl
	rule__StateMachine__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getCommaKeyword_8_0()); }

	',' 

{ after(grammarAccess.getStateMachineAccess().getCommaKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getEventsAssignment_8_1()); }
(rule__StateMachine__EventsAssignment_8_1)
{ after(grammarAccess.getStateMachineAccess().getEventsAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IntegerVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerVariable__Group__0__Impl
	rule__IntegerVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerVariableAccess().getIntegerVariableAction_0()); }
(

)
{ after(grammarAccess.getIntegerVariableAccess().getIntegerVariableAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerVariable__Group__1__Impl
	rule__IntegerVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerVariableAccess().getVarKeyword_1()); }

	'var' 

{ after(grammarAccess.getIntegerVariableAccess().getVarKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerVariable__Group__2__Impl
	rule__IntegerVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerVariableAccess().getNameAssignment_2()); }
(rule__IntegerVariable__NameAssignment_2)
{ after(grammarAccess.getIntegerVariableAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerVariable__Group__3__Impl
	rule__IntegerVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerVariableAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getIntegerVariableAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerVariable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerVariable__Group__4__Impl
	rule__IntegerVariable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerVariableAccess().getIntegerKeyword_4()); }

	'integer' 

{ after(grammarAccess.getIntegerVariableAccess().getIntegerKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerVariable__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerVariable__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerVariableAccess().getGroup_5()); }
(rule__IntegerVariable__Group_5__0)?
{ after(grammarAccess.getIntegerVariableAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IntegerVariable__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerVariable__Group_5__0__Impl
	rule__IntegerVariable__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerVariableAccess().getColonEqualsSignKeyword_5_0()); }

	':=' 

{ after(grammarAccess.getIntegerVariableAccess().getColonEqualsSignKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerVariable__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerVariable__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerVariableAccess().getValueAssignment_5_1()); }
(rule__IntegerVariable__ValueAssignment_5_1)
{ after(grammarAccess.getIntegerVariableAccess().getValueAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanVariable__Group__0__Impl
	rule__BooleanVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableAccess().getBooleanVariableAction_0()); }
(

)
{ after(grammarAccess.getBooleanVariableAccess().getBooleanVariableAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanVariable__Group__1__Impl
	rule__BooleanVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableAccess().getVarKeyword_1()); }

	'var' 

{ after(grammarAccess.getBooleanVariableAccess().getVarKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanVariable__Group__2__Impl
	rule__BooleanVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableAccess().getNameAssignment_2()); }
(rule__BooleanVariable__NameAssignment_2)
{ after(grammarAccess.getBooleanVariableAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanVariable__Group__3__Impl
	rule__BooleanVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getBooleanVariableAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanVariable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanVariable__Group__4__Impl
	rule__BooleanVariable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableAccess().getBooleanKeyword_4()); }

	'boolean' 

{ after(grammarAccess.getBooleanVariableAccess().getBooleanKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanVariable__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanVariable__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableAccess().getGroup_5()); }
(rule__BooleanVariable__Group_5__0)?
{ after(grammarAccess.getBooleanVariableAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__BooleanVariable__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanVariable__Group_5__0__Impl
	rule__BooleanVariable__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableAccess().getColonEqualsSignKeyword_5_0()); }

	':=' 

{ after(grammarAccess.getBooleanVariableAccess().getColonEqualsSignKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanVariable__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanVariable__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableAccess().getValueAssignment_5_1()); }
(rule__BooleanVariable__ValueAssignment_5_1)
{ after(grammarAccess.getBooleanVariableAccess().getValueAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IntegerData__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerData__Group__0__Impl
	rule__IntegerData__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerData__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDataAccess().getIntegerDataAction_0()); }
(

)
{ after(grammarAccess.getIntegerDataAccess().getIntegerDataAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerData__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerData__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerData__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDataAccess().getValueAssignment_1()); }
(rule__IntegerData__ValueAssignment_1)
{ after(grammarAccess.getIntegerDataAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanData__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanData__Group__0__Impl
	rule__BooleanData__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanData__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanDataAccess().getBooleanDataAction_0()); }
(

)
{ after(grammarAccess.getBooleanDataAccess().getBooleanDataAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanData__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanData__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanData__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanDataAccess().getValueAssignment_1()); }
(rule__BooleanData__ValueAssignment_1)
{ after(grammarAccess.getBooleanDataAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Event__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__0__Impl
	rule__Event__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getEventAction_0()); }
(

)
{ after(grammarAccess.getEventAccess().getEventAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getNameAssignment_1()); }
(rule__Event__NameAssignment_1)
{ after(grammarAccess.getEventAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStateAction_0()); }
(

)
{ after(grammarAccess.getStateAccess().getStateAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStateKeyword_1()); }

	'state' 

{ after(grammarAccess.getStateAccess().getStateKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameAssignment_2()); }
(rule__State__NameAssignment_2)
{ after(grammarAccess.getStateAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__3__Impl
	rule__State__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__4__Impl
	rule__State__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getOperationAssignment_4()); }
(rule__State__OperationAssignment_4)?
{ after(grammarAccess.getStateAccess().getOperationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CompositeState__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState__Group__0__Impl
	rule__CompositeState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeStateAccess().getCompositeStateAction_0()); }
(

)
{ after(grammarAccess.getCompositeStateAccess().getCompositeStateAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState__Group__1__Impl
	rule__CompositeState__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeStateAccess().getStateKeyword_1()); }

	'state' 

{ after(grammarAccess.getCompositeStateAccess().getStateKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState__Group__2__Impl
	rule__CompositeState__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeStateAccess().getNameAssignment_2()); }
(rule__CompositeState__NameAssignment_2)
{ after(grammarAccess.getCompositeStateAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState__Group__3__Impl
	rule__CompositeState__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeStateAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getCompositeStateAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState__Group__4__Impl
	rule__CompositeState__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeStateAccess().getStatesAssignment_4()); }
(rule__CompositeState__StatesAssignment_4)
{ after(grammarAccess.getCompositeStateAccess().getStatesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState__Group__5__Impl
	rule__CompositeState__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeStateAccess().getStatesAssignment_5()); }
(rule__CompositeState__StatesAssignment_5)*
{ after(grammarAccess.getCompositeStateAccess().getStatesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState__Group__6__Impl
	rule__CompositeState__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeStateAccess().getInitialStateAssignment_6()); }
(rule__CompositeState__InitialStateAssignment_6)
{ after(grammarAccess.getCompositeStateAccess().getInitialStateAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeStateAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getCompositeStateAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__InitialState__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitialState__Group__0__Impl
	rule__InitialState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialStateAccess().getInitialStateAction_0()); }
(

)
{ after(grammarAccess.getInitialStateAccess().getInitialStateAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitialState__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitialState__Group__1__Impl
	rule__InitialState__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialStateAccess().getInitKeyword_1()); }

	'init' 

{ after(grammarAccess.getInitialStateAccess().getInitKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitialState__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitialState__Group__2__Impl
	rule__InitialState__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialStateAccess().getWithKeyword_2()); }

	'with' 

{ after(grammarAccess.getInitialStateAccess().getWithKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitialState__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitialState__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialStateAccess().getReferencedStateAssignment_3()); }
(rule__InitialState__ReferencedStateAssignment_3)
{ after(grammarAccess.getInitialStateAccess().getReferencedStateAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Operation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getOperationAction_0()); }
(

)
{ after(grammarAccess.getOperationAccess().getOperationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__1__Impl
	rule__Operation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getDoKeyword_1()); }

	'do' 

{ after(grammarAccess.getOperationAccess().getDoKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__2__Impl
	rule__Operation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__3__Impl
	rule__Operation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getContentsAssignment_3()); }
(rule__Operation__ContentsAssignment_3)
{ after(grammarAccess.getOperationAccess().getContentsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__4__Impl
	rule__Operation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getGroup_4()); }
(rule__Operation__Group_4__0)*
{ after(grammarAccess.getOperationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Operation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_4__0__Impl
	rule__Operation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getSemicolonKeyword_4_0()); }

	';' 

{ after(grammarAccess.getOperationAccess().getSemicolonKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getContentsAssignment_4_1()); }
(rule__Operation__ContentsAssignment_4_1)
{ after(grammarAccess.getOperationAccess().getContentsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanAssignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanAssignment__Group__0__Impl
	rule__BooleanAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAssignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAssignmentAccess().getAssignmentAction_0()); }
(

)
{ after(grammarAccess.getBooleanAssignmentAccess().getAssignmentAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanAssignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanAssignment__Group__1__Impl
	rule__BooleanAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAssignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAssignmentAccess().get_nameAssignment_1()); }
(rule__BooleanAssignment___nameAssignment_1)?
{ after(grammarAccess.getBooleanAssignmentAccess().get_nameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanAssignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanAssignment__Group__2__Impl
	rule__BooleanAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAssignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAssignmentAccess().getVariableAssignment_2()); }
(rule__BooleanAssignment__VariableAssignment_2)
{ after(grammarAccess.getBooleanAssignmentAccess().getVariableAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanAssignment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanAssignment__Group__3__Impl
	rule__BooleanAssignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAssignment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAssignmentAccess().getColonEqualsSignKeyword_3()); }

	':=' 

{ after(grammarAccess.getBooleanAssignmentAccess().getColonEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanAssignment__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanAssignment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAssignment__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAssignmentAccess().getExpressionAssignment_4()); }
(rule__BooleanAssignment__ExpressionAssignment_4)
{ after(grammarAccess.getBooleanAssignmentAccess().getExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__IntegerAssignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerAssignment__Group__0__Impl
	rule__IntegerAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerAssignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAssignmentAccess().getAssignmentAction_0()); }
(

)
{ after(grammarAccess.getIntegerAssignmentAccess().getAssignmentAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerAssignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerAssignment__Group__1__Impl
	rule__IntegerAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerAssignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAssignmentAccess().get_nameAssignment_1()); }
(rule__IntegerAssignment___nameAssignment_1)?
{ after(grammarAccess.getIntegerAssignmentAccess().get_nameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerAssignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerAssignment__Group__2__Impl
	rule__IntegerAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerAssignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAssignmentAccess().getVariableAssignment_2()); }
(rule__IntegerAssignment__VariableAssignment_2)
{ after(grammarAccess.getIntegerAssignmentAccess().getVariableAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerAssignment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerAssignment__Group__3__Impl
	rule__IntegerAssignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerAssignment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAssignmentAccess().getColonEqualsSignKeyword_3()); }

	':=' 

{ after(grammarAccess.getIntegerAssignmentAccess().getColonEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerAssignment__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerAssignment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerAssignment__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAssignmentAccess().getExpressionAssignment_4()); }
(rule__IntegerAssignment__ExpressionAssignment_4)
{ after(grammarAccess.getIntegerAssignmentAccess().getExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTransitionAction_0()); }
(

)
{ after(grammarAccess.getTransitionAccess().getTransitionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getFromKeyword_1()); }

	'from' 

{ after(grammarAccess.getTransitionAccess().getFromKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSourceAssignment_2()); }
(rule__Transition__SourceAssignment_2)
{ after(grammarAccess.getTransitionAccess().getSourceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getToKeyword_3()); }

	'to' 

{ after(grammarAccess.getTransitionAccess().getToKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__4__Impl
	rule__Transition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetAssignment_4()); }
(rule__Transition__TargetAssignment_4)
{ after(grammarAccess.getTransitionAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__5__Impl
	rule__Transition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getForKeyword_5()); }

	'for' 

{ after(grammarAccess.getTransitionAccess().getForKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEventAssignment_6()); }
(rule__Transition__EventAssignment_6)
{ after(grammarAccess.getTransitionAccess().getEventAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

















rule__StateMachine__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getStateMachineAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__VariablesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getVariablesVariableParserRuleCall_4_0()); }
	ruleVariable{ after(grammarAccess.getStateMachineAccess().getVariablesVariableParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__EventsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getEventsEventParserRuleCall_7_0()); }
	ruleEvent{ after(grammarAccess.getStateMachineAccess().getEventsEventParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__EventsAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getEventsEventParserRuleCall_8_1_0()); }
	ruleEvent{ after(grammarAccess.getStateMachineAccess().getEventsEventParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__StatesAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStatesOneStateParserRuleCall_10_0()); }
	ruleoneState{ after(grammarAccess.getStateMachineAccess().getStatesOneStateParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__StatesAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStatesOneStateParserRuleCall_11_0()); }
	ruleoneState{ after(grammarAccess.getStateMachineAccess().getStatesOneStateParserRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__InitialStateAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getInitialStateInitialStateParserRuleCall_12_0()); }
	ruleInitialState{ after(grammarAccess.getStateMachineAccess().getInitialStateInitialStateParserRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__TransitionsAssignment_13
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getTransitionsTransitionParserRuleCall_13_0()); }
	ruleTransition{ after(grammarAccess.getStateMachineAccess().getTransitionsTransitionParserRuleCall_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__TransitionsAssignment_14
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getTransitionsTransitionParserRuleCall_14_0()); }
	ruleTransition{ after(grammarAccess.getStateMachineAccess().getTransitionsTransitionParserRuleCall_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerVariableAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getIntegerVariableAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__ValueAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerVariableAccess().getValueIntegerDataParserRuleCall_5_1_0()); }
	ruleintegerData{ after(grammarAccess.getIntegerVariableAccess().getValueIntegerDataParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getBooleanVariableAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__ValueAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableAccess().getValueBooleanDataParserRuleCall_5_1_0()); }
	rulebooleanData{ after(grammarAccess.getBooleanVariableAccess().getValueBooleanDataParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerData__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDataAccess().getValueINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getIntegerDataAccess().getValueINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanData__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanDataAccess().getValueBoolParserRuleCall_1_0()); }
	ruleBool{ after(grammarAccess.getBooleanDataAccess().getValueBoolParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getEventAccess().getNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__OperationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getOperationOperationParserRuleCall_4_0()); }
	ruleOperation{ after(grammarAccess.getStateAccess().getOperationOperationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeStateAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getCompositeStateAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState__StatesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeStateAccess().getStatesStateParserRuleCall_4_0()); }
	ruleState{ after(grammarAccess.getCompositeStateAccess().getStatesStateParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState__StatesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeStateAccess().getStatesStateParserRuleCall_5_0()); }
	ruleState{ after(grammarAccess.getCompositeStateAccess().getStatesStateParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState__InitialStateAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeStateAccess().getInitialStateInitialStateParserRuleCall_6_0()); }
	ruleInitialState{ after(grammarAccess.getCompositeStateAccess().getInitialStateInitialStateParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__ReferencedStateAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialStateAccess().getReferencedStateStateCrossReference_3_0()); }
(
{ before(grammarAccess.getInitialStateAccess().getReferencedStateStateIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getInitialStateAccess().getReferencedStateStateIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getInitialStateAccess().getReferencedStateStateCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ContentsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getContentsAssignmentParserRuleCall_3_0()); }
	ruleAssignment{ after(grammarAccess.getOperationAccess().getContentsAssignmentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ContentsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getContentsAssignmentParserRuleCall_4_1_0()); }
	ruleAssignment{ after(grammarAccess.getOperationAccess().getContentsAssignmentParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAssignment___nameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAssignmentAccess().get_nameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getBooleanAssignmentAccess().get_nameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAssignment__VariableAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAssignmentAccess().getVariableBooleanVariableCrossReference_2_0()); }
(
{ before(grammarAccess.getBooleanAssignmentAccess().getVariableBooleanVariableIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getBooleanAssignmentAccess().getVariableBooleanVariableIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getBooleanAssignmentAccess().getVariableBooleanVariableCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAssignment__ExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAssignmentAccess().getExpressionBooleanDataParserRuleCall_4_0()); }
	rulebooleanData{ after(grammarAccess.getBooleanAssignmentAccess().getExpressionBooleanDataParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerAssignment___nameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAssignmentAccess().get_nameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getIntegerAssignmentAccess().get_nameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerAssignment__VariableAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAssignmentAccess().getVariableIntegerVariableCrossReference_2_0()); }
(
{ before(grammarAccess.getIntegerAssignmentAccess().getVariableIntegerVariableIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getIntegerAssignmentAccess().getVariableIntegerVariableIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getIntegerAssignmentAccess().getVariableIntegerVariableCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerAssignment__ExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAssignmentAccess().getExpressionIntegerDataParserRuleCall_4_0()); }
	ruleintegerData{ after(grammarAccess.getIntegerAssignmentAccess().getExpressionIntegerDataParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__SourceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSourceStateCrossReference_2_0()); }
(
{ before(grammarAccess.getTransitionAccess().getSourceStateIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getSourceStateIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getSourceStateCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetStateCrossReference_4_0()); }
(
{ before(grammarAccess.getTransitionAccess().getTargetStateIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getTargetStateIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getTargetStateCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__EventAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEventEventCrossReference_6_0()); }
(
{ before(grammarAccess.getTransitionAccess().getEventEventSTRINGTerminalRuleCall_6_0_1()); }
	RULE_STRING{ after(grammarAccess.getTransitionAccess().getEventEventSTRINGTerminalRuleCall_6_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getEventEventCrossReference_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


